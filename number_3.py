# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять
# список только числами. Класс-исключение должен контролировать типы данных элементов списка.

# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список с числами выводится на экран.

#Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и
# вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.

class MyError (Exception):
    def __init__(self, message: str):
        self.message = message


def check(input_item, input_list):
    try:
        input_item = float(input_item)
        input_list.append(input_item)
        print(input_item, 'добавлено в список')
    except ValueError:
        res = MyError('Элемент - не число, в список не добавлен')
        print(res)

input_list = []
input_item = ''

while input_item != 'stop':
    input_item = input('Введите значение (для выхода введите "stop"): ')
    check(input_item, input_list)

print("Итоговый список:", input_list)

